何十社のゲーム会社が求めてる学生が
1.オブジェクト指向設計ができるようになってほしい
	・クラス図読めること
		継承関係△とそれ以外の依存関係->の区別が
		ついてたらいいです
	★クラス図からコードに落とすことができる
	
	・ポリモーフィズムを理解できて、そして使えること
		->Game Programming Patterns(おすすめ)
		->Readable Code
2.ハードウェアについてもちょっと知ってほしい
	HDD->メモリ
	メモリ->Vram->ディスプレイに表示
	
クラス図からコードに落とすには、
★クラス図をチャットGPTなどに書いてもらう
->AIはテキストベースなのでPlantUMLなどで書いてもらう
そのPlantUMLコードをVisualStudio(PlantUML拡張インスト済み)に
貼り付けてプレビュー
->クラス図ができます
	できますが、結構間違いがあるため、自分で手直ししてください
	0->1は難しいけど1->2はできるので。ChatGPTに対して「馬鹿だな」
	といいながら手直しする
そういう意味で、他人が書いたクラス図もPlantUMLに一度直して
それから、コーディングを考えましょう

1.クラス図に書かれているクラスを作る
	class クラス名{
	};
	をまず書く(中身はまだいい)
	PlantUMLだったら、おそらくC++ライクのクラスがすでに記述
	されているので、それをもとに書く
2.もし、継承関係◂-が見つかったら、実際に継承関係にする
	Axtor◂-Playerを書かれていたら
	class Player : public Actor{
	}
	とかく
3.あとは、場合によってはメンバ変数やメンバ関数が記載されているので
	実際に定義していく
	
クラス図や、その他の図が書けるようになっておくとポートフォリオに書いて説明できる

	サイバーエージェント、ヒストリアが長期休暇などにエンジニア向けのイベントをやっている
	

背景は下から上に計算したい
DrawRotaGraph2(X座標,Y座標,画像のX基準点,画像のY基準点,拡大率,回転,ハンドル)

無限スクロール
描画を1画面に必要な画像+1行う
もし、描画する画像のサイズが画面のサイズ未満だった場合は
１画面表示するために２枚必要な案だけど、それ+1まいで三枚必要になる


多重スクロールについて

最前面が一番早く最背面が一番遅く
これは割合計算をします

手前が１動くとき億は０．５だけなど